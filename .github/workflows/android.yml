name: Android Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  QT_VERSION: 5.15.2
  ANDROID_API: 31
  BUILD_TOOLS: 33.0.0
  NDK_VERSION: 25.1.8937393
  GRADLE_VERSION: 7.6.1
  JDK_VERSION: '17'
  PYTHON_VERSION: '3.9'

jobs:
  build-android:
    name: Build Android APK
    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        path: src  # 指定检出目录

    - name: Setup Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'
        cache-dependency-path: 'src/requirements.txt'  # 显式指定依赖文件路径

    - name: Generate requirements.txt (fallback)
     
      run: |
        echo "Generating minimal requirements..."
        cat << EOF > src/requirements.txt
        six>=1.16.0
        pyyaml>=6.0
        pyparsing>=3.0.9
        packaging>=21.3
        requests>=2.28.1
        EOF

    - name: Install Python dependencies
      working-directory: ./src
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt --user

    # 后续步骤保持不变，添加 working-directory 参数
    - name: Setup JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: ${{ env.JDK_VERSION }}

    - name: Install Android SDK
      uses: android-actions/setup-android@v3
      with:
        api-level: ${{ env.ANDROID_API }}
        build-tools: ${{ env.BUILD_TOOLS }}

    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: ${{ env.QT_VERSION }}
        target: android
        arch: android_arm64_v8a
        setup-python: false
        working-directory: ./src  # 指定工作目录

    # 其余步骤需要添加 working-directory 参数
    - name: Configure Gradle
      working-directory: ./src
      run: |
        sed -i "s/gradle-[0-9\.]*-all.zip/gradle-${{ env.GRADLE_VERSION }}-all.zip/g" gradle/wrapper/gradle-wrapper.properties
        mkdir -p ~/.gradle
        echo "org.gradle.java.home=$JAVA_HOME" >> ~/.gradle/gradle.properties

    - name: Build APK
      working-directory: ./src
      run: |
        export ANDROID_SDK_ROOT=$ANDROID_HOME
        export ANDROID_NDK_ROOT=$ANDROID_HOME/ndk/${{ env.NDK_VERSION }}
        export PATH="$HOME/.local/bin:$PATH"

        qmake -spec android-clang CONFIG+=release
        make -j$(nproc) || make
        make apk_install_target

        cd android-build
        chmod +x gradlew
        ./gradlew assembleRelease \
          -Pandroid.injected.signing.store.file=../android-release-key.keystore \
          -Pandroid.injected.signing.store.password=${{ secrets.KEYSTORE_PASSWORD }} \
          -Pandroid.injected.signing.key.alias=${{ secrets.KEY_ALIAS }} \
          -Pandroid.injected.signing.key.password=${{ secrets.KEY_PASSWORD }} \
          --no-daemon \
          --stacktrace

    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: Knot-Android
        path: src/android-build/build/outputs/apk/release/*.apk
        retention-days: 7
