name: Android Build for Knot

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  QT_VERSION: 5.15.2
  ANDROID_API: 33
  ANDROID_BUILD_TOOLS: 33.0.1
  ANDROID_NDK: 21.4.7075529
  ANDROID_ABIS: arm64-v8a

jobs:
  build-android:
    runs-on: ubuntu-22.04
    timeout-minutes: 40

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libgl1-mesa-dev \
          libicu-dev \
          python3-pip \
          unzip \
          ninja-build

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        ndk-version: ${{ env.ANDROID_NDK }}
        build-tools-version: ${{ env.ANDROID_BUILD_TOOLS }}
        platform-version: android-${{ env.ANDROID_API }}

    - name: Cache Qt installations
      uses: actions/cache@v3
      id: qt-cache
      with:
        path: |
          ${{ env.HOME }}/Qt
          ${{ env.HOME }}/.aqt
        key: ${{ runner.os }}-qt-${{ env.QT_VERSION }}-android-modules-v3

    - name: Install Qt with corrected modules
      if: steps.qt-cache.outputs.cache-hit != 'true'
      run: |
        pip3 install --user aqtinstall==3.1.9
        python3 -m aqt install-qt \
          linux android ${{ env.QT_VERSION }} \
          android_${{ env.ANDROID_ABIS }} \
          --autodesktop \
          -m qtbase \
          qttools \
          qtandroidextras \
          qtshadertools \
          qtcharts \
          qtsvg \
          qtquickcontrols2 \
          qtgraphicaleffects \
          qtdeclarative \
          --archives \
          qtbase \
          qttools \
          qtandroidextras

    - name: Verify Qt installation
      run: |
        echo "=== Qt安装目录结构 ==="
        ls -l $HOME/Qt/$QT_VERSION/android_$ANDROID_ABIS
        echo -e "\n=== 核心模块验证 ==="
        ls $HOME/Qt/$QT_VERSION/android_$ANDROID_ABIS/lib/*.so
        echo -e "\n=== QML模块验证 ==="
        ls $HOME/Qt/$QT_VERSION/android_$ANDROID_ABIS/qml/{QtCharts,QtSvg,QtQuick/Controls/2}

    - name: Configure environment
      run: |
        echo "ANDROID_SDK_ROOT=$ANDROID_HOME" >> $GITHUB_ENV
        echo "ANDROID_NDK_HOME=$ANDROID_NDK_ROOT" >> $GITHUB_ENV
        echo "QT_DIR=$HOME/Qt/$QT_VERSION/android_$ANDROID_ABIS" >> $GITHUB_ENV
        echo "PATH=$QT_DIR/bin:$PATH" >> $GITHUB_ENV

    - name: Build preparation
      run: |
        qmake -query
        qmake -r -spec android-clang CONFIG+=debug
        find . -name "*.pro" -exec sed -i '/QT +=/ s/$/ charts svg quickcontrols2 graphicaleffects/' {} \;

    - name: Build project
      run: |
        qmake Knot.pro \
          -spec android-clang \
          CONFIG+=release \
          ANDROID_ABIS=$ANDROID_ABIS \
          "QMAKE_CXXFLAGS += -fexceptions" \
          "QMAKE_JAVAC=javac -J-Dfile.encoding=UTF-8"
        
        make -j$(nproc) all
        make apk

    - name: Generate APK
      run: |
        cd android-build
        $QT_DIR/bin/androiddeployqt \
          --input android-libKnot.so-deployment-settings.json \
          --output . \
          --gradle \
          --release \
          --sign ../android/release.keystore \
          --storepass "${{ secrets.STORE_PASSWORD }}" \
          --alias "${{ secrets.KEY_ALIAS }}"

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Knot-APK
        path: |
          android-build/build/outputs/apk/**/*.apk
        retention-days: 3
