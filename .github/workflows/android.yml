name: Android Qt CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  QT_VERSION: "5.15.2"
  QT_ARCH: "android_arm64_v8a"
  ANDROID_API: 31
  NDK_VERSION: "25.1.8937393"
  BUILD_TOOLS: "34.0.0"

jobs:
  android-build:
    name: Build APK
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
    # ========== 基础环境配置 ==========
    - name: Checkout code
      uses: actions/checkout@v4

    # ========== Android SDK 配置 ==========
    - name: Install Android SDK
      uses: android-actions/setup-android@v3
      with:
        api-level: ${{ env.ANDROID_API }}
        build-tools: ${{ env.BUILD_TOOLS }}

    - name: Install NDK
      run: |
        yes | $ANDROID_HOME/tools/bin/sdkmanager "ndk;${{ env.NDK_VERSION }}"
        echo "ANDROID_NDK_ROOT=$ANDROID_HOME/ndk/${{ env.NDK_VERSION }}" >> $GITHUB_ENV

    # ========== Qt 安装强化步骤 ==========
    - name: Install Qt with Android toolchain
      run: |
        # 安装必要依赖
        sudo apt-get install -y python3-pip p7zip-full
        
        # 使用国内镜像加速安装
        python3 -m pip install -i https://pypi.tuna.tsinghua.edu.cn/simple aqtinstall
        
        # 完整安装命令（关键修改）
        aqt install-qt \
          linux android ${{ env.QT_VERSION }} ${{ env.QT_ARCH }} \
          -m "qt.qt5.5152.android_arm64_v8a" \
          -m "qt.qt5.5152.qtandroidextras" \
          -m "qt.qt5.5152.qtmqtt" \
          -m "qt.qt5.5152.qtsvg" \
          --autodesktop \
          --outputdir Qt
        
        # 验证mkspecs安装
        echo "Qt安装路径: $QT_DIR"
        ls -l $QT_DIR/mkspecs/android-clang || echo "mkspecs验证失败！"
        
        # 设置环境变量
        echo "QT_DIR=${GITHUB_WORKSPACE}/Qt/${{ env.QT_VERSION }}/${{ env.QT_ARCH }}" >> $GITHUB_ENV
        echo "PATH=${QT_DIR}/bin:${PATH}" >> $GITHUB_ENV

    # ========== 环境修复步骤 ==========
    - name: Fix NDK Symlinks
      run: |
        # 动态检测实际路径
        NDK_PREBUILT_PATH=$(ls -d $ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/* | head -n1)
        
        # 创建符号链接
        sudo mkdir -p $ANDROID_NDK_ROOT/toolchains/llvm/prebuilt
        sudo ln -sf $NDK_PREBUILT_PATH $ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux
        
        # 验证链接
        echo "符号链接状态："
        ls -l $ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux

    # ========== 构建配置 ==========
    - name: Configure Qt Environment
      run: |
        # 生成qt.conf配置文件
        cat << EOF > $QT_DIR/bin/qt.conf
        [Paths]
        Prefix = $QT_DIR
        HostPrefix = $QT_DIR/../../Tools/QtCreator
        Sysroot = $ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux/sysroot
        EOF
        
        # 设置构建参数
        echo "ANDROID_NDK_HOST=linux-x86_64" >> $GITHUB_ENV
        echo "QMAKE_SPEC=android-clang" >> $GITHUB_ENV

    # ========== 构建流程 ==========
    - name: Build Project
      run: |
        # 导出必要变量
        export ANDROID_NDK_ROOT
        export ANDROID_SDK_ROOT=$ANDROID_HOME
        
        # 生成Makefile
        qmake -spec $QMAKE_SPEC CONFIG+=release
        
        # 并行编译
        make -j$(nproc) || make
        
        # 生成APK包
        make apk_install_target

    # ========== APK签名与上传 ==========
    - name: Build Signed APK
      working-directory: android-build
      run: |
        chmod +x gradlew
        ./gradlew assembleRelease \
          -Pandroid.injected.signing.store.file=../android.keystore \
          -Pandroid.injected.signing.store.password=${{ secrets.KEYSTORE_PASSWORD }} \
          -Pandroid.injected.signing.key.alias=${{ secrets.KEY_ALIAS }} \
          -Pandroid.injected.signing.key.password=${{ secrets.KEY_PASSWORD }} \
          --no-daemon \
          --stacktrace

    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: android-release
        path: android-build/build/outputs/apk/release/*.apk
        retention-days: 7
