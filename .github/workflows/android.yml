name: Android
on: 
  push:
    paths:
      - '*.pro'
      - 'src/**'
      - '.github/workflows/android.yml'
      - '*.cpp'
      - '*.h'
  pull_request:
    paths:
      - '*.pro'
      - 'src/**'
      - '.github/workflows/android.yml'  
      - '*.cpp'
      - '*.h'
jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - qt_ver: 5.15.2
            qt_arch: android_x86_64
            os: ubuntu-20.04
            qt_target: android
            
          - qt_ver: 5.15.2
            qt_arch: android_armv8
            os: ubuntu-20.04
            qt_target: android    
            
    env:
      targetName: Knot
      VERSION: Android     
                
             
    steps:
      
      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        if: ${{ matrix.qt_ver == '5.15.2' }}
        with:
          modules: 'qtcharts'
          version: ${{ matrix.qt_ver }}
          target: ${{ matrix.qt_target }}
          # here need not arch
          # arch: ${{ matrix.qt_arch }} 
          
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1    
          
                      
      - name: build android
        run: |
          export ANDROID_SDK_ROOT=$ANDROID_HOME
          export ANDROID_NDK_ROOT=$ANDROID_HOME/ndk-bundle
          qmake
          make
          
     # 打包
     # - name: package
     #   run: |
          # 拷贝依赖
          # cp -f Info.plist bin/release/${targetName}.app/Contents/Info.plist
          # macdeployqt bin/release/${targetName}.app -qmldir=. -verbose=1 -dmg
          
      # 上传artifacts          
      #- uses: actions/upload-artifact@v2
      #  with:
          #name:  ${{ env.targetName }}_${{ matrix.os }}_${{ matrix.qt_ver }} # .zip
          #name:  ${{ env.targetName }}-${{ env.VERSION }}.apk
          #path: bin/release/${{ env.targetName }}
          #path: /home/runner/work/Xcounter/android-build/build/outputs/apk/debug/android-build-debug.apk
          
          
      # tag 上传Release
      # - name: uploadRelease
      #  if: startsWith(github.event.ref, 'refs/tags/')
      #  uses: svenstaro/upload-release-action@v2
      #  with:
      #    repo_token: ${{ secrets.GITHUB_TOKEN }}
      #    file: bin/release/${{ env.targetName }}.dmg
          
          #asset_name: ${{ env.targetName }}_${{ matrix.os }}_${{ matrix.qt_ver }}.dmg
      #    asset_name: ${{ env.targetName }}-${{ env.VERSION }}.dmg
          
      #   tag: ${{ github.ref }}
      #   overwrite: true         
