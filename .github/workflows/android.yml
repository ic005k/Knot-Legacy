name: Android Build for Knot

on:
  push:
    branches: [ main ]

env:
  QT_VERSION: 5.15.2
  ANDROID_NDK: 21.4.7075529
  ANDROID_ABI: arm64_v8a

jobs:
  build-android:
    runs-on: ubuntu-22.04
    timeout-minutes: 40

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Android SDK (fixed)
      run: |
        # 创建基础目录
        mkdir -p $HOME/android-sdk
        mkdir -p $HOME/android-sdk/cmdline-tools
        mkdir -p $HOME/android-sdk/cmdline-tools/latest

        # 下载并解压命令行工具
        wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -P $RUNNER_TEMP
        unzip -q $RUNNER_TEMP/commandlinetools-linux-*.zip -d $HOME/android-sdk/cmdline-tools

        # 移动到标准位置
        mv $HOME/android-sdk/cmdline-tools/cmdline-tools/* $HOME/android-sdk/cmdline-tools/latest/
        rm -rf $HOME/android-sdk/cmdline-tools/cmdline-tools

        # 验证目录结构
        echo "=== 目录验证 ==="
        ls -l $HOME/android-sdk/cmdline-tools/latest/bin
        which sdkmanager || true

        # 设置环境变量
        echo "ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
        echo "PATH=$HOME/android-sdk/cmdline-tools/latest/bin:$PATH" >> $GITHUB_ENV

    - name: License Acceptance (fixed)
      run: |
        # 使用绝对路径调用
        $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager --licenses || true

        # Expect自动应答
        /usr/bin/expect -c '
        set timeout 120
        spawn $env:HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager --licenses
        expect {
            "y/N" { send "y\r"; exp_continue }
            timeout { exit 1 }
            eof
        }'

    - name: Install SDK Components (fixed)
      run: |
        $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager \
          "platform-tools" \
          "platforms;android-33" \
          "build-tools;33.0.0" \
          "ndk;$ANDROID_NDK"

        # 验证安装
        echo "=== 组件列表 ==="
        $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager --list

    - name: Qt Installation
      run: |
        pip3 install aqtinstall==3.1.9
        aqt install-qt linux android $QT_VERSION android_$ANDROID_ABI \
          -m qtcharts qtsvg qtquickcontrols2 qtgraphicaleffects

    - name: Build Project
      run: |
        export PATH="$HOME/Qt/$QT_VERSION/android_$ANDROID_ABI/bin:$PATH"
        qmake Knot.pro -spec android-clang \
          ANDROID_ABIS=$ANDROID_ABI \
          "QMAKE_CXXFLAGS+=-fexceptions"
        
        make -j$(nproc) apk

    - name: Generate APK
      run: |
        $HOME/Qt/$QT_VERSION/android_$ANDROID_ABI/bin/androiddeployqt \
          --input android-libKnot.so-deployment-settings.json \
          --output android-build \
          --gradle --release

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: Knot-APK
        path: android-build/build/outputs/apk/release/*.apk
