name: Android Qt 5.15.2 Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  QT_VERSION: 5.15.2
  ANDROID_API: android-28
  NDK_VERSION: r21c
  QT_HOST: linux
  QT_TARGET: android
  QT_ARCH: android_arm64_v8a

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'zulu'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libgl1-mesa-dev libssl-dev

    - name: Install aqtinstall (specific version)
      run: pip install aqtinstall==2.0.6

    - name: Install Qt and Android components
      run: |
        # 安装 Android 版本的 Qt
        aqt install-qt ${{ env.QT_HOST }} ${{ env.QT_TARGET }} ${{ env.QT_VERSION }} ${{ env.QT_ARCH }} \
          --outputdir /opt/qt

        # 安装 Android SDK/NDK
        aqt install-tool linux android --rootdir /opt/android-sdk tools
        aqt install-tool linux android --rootdir /opt/android-sdk platform-tools
        aqt install-tool linux android --rootdir /opt/android-sdk platform android-28
        aqt install-tool linux android --rootdir /opt/android-sdk ndk r21c
        aqt install-tool linux android --rootdir /opt/android-sdk build-tools 31.0.0  # 注意版本号格式

    - name: Setup environment
      run: |
        echo "ANDROID_SDK_ROOT=/opt/android-sdk" >> $GITHUB_ENV
        echo "ANDROID_NDK_ROOT=/opt/android-sdk/ndk/${{ env.NDK_VERSION }}" >> $GITHUB_ENV
        echo "PATH=$PATH:/opt/qt/${{ env.QT_VERSION }}/android_arm64_v8a/bin" >> $GITHUB_ENV

    - name: Generate release keystore
      run: |
        keytool -genkey -v -keystore release.keystore \
          -storepass android -alias androiddebugkey \
          -keypass android -dname "CN=, OU=, O=, L=, S=, C=" \
          -keyalg RSA -keysize 2048 -validity 10000

    - name: Build project
      run: |
        mkdir build
        cd build
        qmake ../Knot.pro -spec android-clang ANDROID_ABIS=arm64-v8a
        make -j2
        make apk

    - name: Sign APK
      env:
        RELEASE_KEYSTORE: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
        KEYSTORE_PASS: ${{ secrets.KEYSTORE_PASSWORD }}
        KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
        KEY_PASS: ${{ secrets.KEY_PASSWORD }}
      run: |
        if [ -n "$RELEASE_KEYSTORE" ]; then
          echo "Signing with release keystore"
          echo "$RELEASE_KEYSTORE" | base64 -d > release.keystore
          find build -name '*.apk' | while read apk; do
            jarsigner -verbose -sigalg SHA1withRSA -digestalg SHA1 \
              -keystore release.keystore \
              -storepass "$KEYSTORE_PASS" \
              -keypass "$KEY_PASS" \
              "$apk" \
              "$KEY_ALIAS"
          done
        else
          echo "Signing with debug keystore"
          find build -name '*.apk' | while read apk; do
            jarsigner -verbose -sigalg SHA1withRSA -digestalg SHA1 \
              -keystore debug.keystore \
              -storepass android \
              -keypass android \
              "$apk" \
              androiddebugkey
          done
        fi

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: Android-APK-5.12
        path: |
          build/android-build/build/outputs/apk/debug/*.apk
          build/android-build/build/outputs/apk/release/*.apk
