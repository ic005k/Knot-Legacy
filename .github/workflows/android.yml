name: Qt Android CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  QT_VERSION: "5.15.2"
  ANDROID_API: 31
  NDK_VERSION: "25.1.8937393"
  BUILD_TOOLS: "34.0.0"

jobs:
  android-build:
    name: Build APK
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
    # ========== 基础环境 ==========
    - name: Checkout code
      uses: actions/checkout@v4

    # ========== 安装Python环境 ==========
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    # ========== 安装Android SDK ==========
    - name: Install Android SDK
      uses: android-actions/setup-android@v3
      with:
        api-level: ${{ env.ANDROID_API }}
        build-tools: ${{ env.BUILD_TOOLS }}

    # ========== 安装NDK（官方推荐方式）==========
    - name: Install NDK
      run: |
        yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "ndk;${{ env.NDK_VERSION }}"
        echo "ANDROID_NDK_ROOT=$ANDROID_HOME/ndk/${{ env.NDK_VERSION }}" >> $GITHUB_ENV

    # ========== 安装Qt（严格遵循官方文档）==========
    - name: Install Qt for Android
      run: |
        # 安装最新版aqtinstall
        python -m pip install --upgrade aqtinstall

        # 列出可用模块验证环境
        aqt list-qt linux android --modules ${{ env.QT_VERSION }}

        # 安装核心组件（官方文档推荐格式）
        aqt install-qt \
          linux android ${{ env.QT_VERSION }} \
          android_arm64_v8a \
          -m "qtcharts qtmqtt qtquick3d" \
          --autodesktop \
          --outputdir Qt

        # 验证安装结果
        echo "QT_DIR=${GITHUB_WORKSPACE}/Qt/${{ env.QT_VERSION }}/android_arm64_v8a" >> $GITHUB_ENV
        echo "PATH=${QT_DIR}/bin:${PATH}" >> $GITHUB_ENV

    # ========== 环境配置（关键修复）==========
    - name: Configure Qt Android Toolchain
      run: |
        # 创建必要的符号链接（动态适配路径）
        NDK_PREBUILT_DIR=$(find $ANDROID_NDK_ROOT/toolchains/llvm/prebuilt -maxdepth 1 -type d -print -quit)
        sudo ln -sf $NDK_PREBUILT_DIR $ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux

        # 生成Qt配置文件（官方推荐方式）
        cat > ${QT_DIR}/bin/qt.conf << EOF
        [Paths]
        Prefix = ${QT_DIR}
        HostPrefix = ${QT_DIR}/../../Tools/QtCreator
        Sysroot = ${NDK_PREBUILT_DIR}/sysroot
        EOF

    # ========== 构建流程 ==========
    - name: Build Project
      run: |
        # 设置构建规范（官方文档推荐参数）
        qmake -spec android-clang \
          ANDROID_ABIS="arm64-v8a" \
          ANDROID_MIN_SDK_VERSION=23 \
          ANDROID_TARGET_SDK_VERSION=${{ env.ANDROID_API }} \
          CONFIG+=release

        make -j$(nproc)
        make apk_install_target

    # ========== 生成APK ==========
    - name: Generate APK
      working-directory: android-build
      run: |
        ${QT_DIR}/bin/androiddeployqt \
          --input android-deployment-settings.json \
          --output . \
          --gradle \
          --verbose

        ./gradlew assembleRelease \
          -Pandroid.injected.signing.store.file=../android.keystore \
          -Pandroid.injected.signing.store.password=${{ secrets.KEYSTORE_PASSWORD }} \
          -Pandroid.injected.signing.key.alias=${{ secrets.KEY_ALIAS }} \
          -Pandroid.injected.signing.key.password=${{ secrets.KEY_PASSWORD }}

    # ========== 上传产物 ==========
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: android-release
        path: android-build/build/outputs/apk/release/*.apk
