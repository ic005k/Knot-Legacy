name: Android Qt CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  # 核心配置
  QT_VERSION: "5.15.2"
  QT_ARCH: "android_arm64_v8a"
  ANDROID_API: 31
  NDK_VERSION: "25.1.8937393"
  
  # 国内镜像加速
  QT_MIRROR: "https://mirrors.ustc.edu.cn/qtproject"
  OFFLINE_INSTALLER: "qt-unified-linux-x64-4.6.1-online.run"

jobs:
  android-build:
    name: Build APK
    runs-on: ubuntu-latest
    timeout-minutes: 90

    steps:
    # ==================== 初始化环境 ====================
    - name: Checkout code
      uses: actions/checkout@v4

    # ==================== Java 环境 ====================
    - name: Setup JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: "temurin"
        java-version: "17"
        cache: "gradle"

    # ==================== Android 环境 ====================
    - name: Install Android SDK
      uses: android-actions/setup-android@v3
      with:
        api-level: ${{ env.ANDROID_API }}
        build-tools: "34.0.0"

    - name: Install NDK (JAXB Fix)
      run: |
        # 使用旧版sdkmanager兼容JDK17
        wget https://dl.google.com/android/repository/commandlinetools-linux-8512546_latest.zip
        unzip commandlinetools-linux-8512546_latest.zip -d cmdline-tools
        mv cmdline-tools/cmdline-tools $ANDROID_HOME/cmdline-tools/latest
        
        yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "ndk;${{ env.NDK_VERSION }}"
        echo "ANDROID_NDK_ROOT=$ANDROID_HOME/ndk/${{ env.NDK_VERSION }}" >> $GITHUB_ENV

    # ==================== Qt 安装方案 ====================
    - name: Download Qt Installer
      run: |
        wget ${{ env.QT_MIRROR }}/online/qtsdkrepository/linux_x64/desktop/qt5_5152/${{ env.OFFLINE_INSTALLER }}
        chmod +x ${{ env.OFFLINE_INSTALLER }}

    - name: Install Qt (Silent Mode)
      run: |
        sudo apt-get install -y libxcb-xinerama0
        ./${{ env.OFFLINE_INSTALLER }} \
          --verbose \
          --accept-licenses \
          --accept-messages \
          --confirm-command \
          install \
          --root "${{ github.workspace }}/Qt" \
          qt.qt5.5152.android_arm64_v8a \
          qt.qt5.5152.qtandroidextras \
          qt.qt5.5152.qtmqtt \
          qt.tools.openssl
        
        echo "QT_DIR=${{ github.workspace }}/Qt/5.15.2/android_arm64_v8a" >> $GITHUB_ENV

    # ==================== 构建配置 ====================
    - name: Configure Environment
      run: |
        # 修复符号链接
        ln -sf $ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64 \
               $ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux
        
        # 配置Qt工具链
        echo "PATH=$QT_DIR/bin:$PATH" >> $GITHUB_ENV

    # ==================== 构建流程 ====================
    - name: Generate Project
      run: |
        qmake -spec android-clang CONFIG+=release
        make -j$(nproc)
        make apk_install_target

    - name: Build Signed APK
      working-directory: android-build
      env:
        KEYSTORE_PASS: ${{ secrets.KEYSTORE_PASSWORD }}
      run: |
        chmod +x gradlew
        ./gradlew assembleRelease \
          -Pandroid.injected.signing.store.file=../android.keystore \
          -Pandroid.injected.signing.store.password=$KEYSTORE_PASS \
          -Pandroid.injected.signing.key.alias=${{ secrets.KEY_ALIAS }} \
          -Pandroid.injected.signing.key.password=${{ secrets.KEY_PASSWORD }} \
          --no-daemon \
          --stacktrace

    # ==================== 产物处理 ====================
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: android-release
        path: android-build/build/outputs/apk/release/*.apk
        retention-days: 7
