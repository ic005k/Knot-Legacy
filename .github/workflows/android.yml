name: Android CI with Qt Fix

on:
  push:
    branches: [ main ]

env:
  QT_VERSION: 5.15.2
  ANDROID_NDK: 21.4.7075529
  ANDROID_ABI: arm64_v8a
  QT_INSTALL_DIR: ${{ github.workspace }}/Qt

jobs:
  build-android:
    runs-on: ubuntu-22.04
    timeout-minutes: 40

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    # 系统依赖安装
    - name: Install system dependencies
      run: |
        sudo apt-get update -y
        sudo apt-get install -y \
          libgl1-mesa-dev \
          unzip \
          expect \
          tcl \
          python3-pip

    # Qt 安装与缓存
    - name: Install Qt with aqt
      id: install-qt
      run: |
        pip3 install aqtinstall==3.1.9
        
        # 显式指定安装路径
        aqt install-qt linux android $QT_VERSION android_$ANDROID_ABI \
          -O $QT_INSTALL_DIR \
          -m qtcharts qtsvg qtquickcontrols2
        
        # 验证安装
        echo "=== Qt验证 ==="
        $QT_INSTALL_DIR/$QT_VERSION/android_$ANDROID_ABI/bin/qmake -v

    - name: Cache Qt
      uses: actions/cache@v3
      with:
        path: $QT_INSTALL_DIR
        key: ${{ runner.os }}-qt-$QT_VERSION-android

    # Android SDK 配置
    - name: Setup Android SDK
      run: |
        mkdir -p $HOME/android-sdk/cmdline-tools/latest
        wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -P $RUNNER_TEMP
        unzip -q $RUNNER_TEMP/commandlinetools-linux-*.zip -d $HOME/android-sdk/cmdline-tools
        mv $HOME/android-sdk/cmdline-tools/cmdline-tools/* $HOME/android-sdk/cmdline-tools/latest/

        echo "ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
        echo "PATH=$HOME/android-sdk/cmdline-tools/latest/bin:$PATH" >> $GITHUB_ENV

    # 许可证自动接受
    - name: Accept licenses
      run: |
        yes | $HOME/android-sdk/cmdline-tools/latest/bin/sdkmanager --licenses

    # 构建环境配置
    - name: Configure build environment
      run: |
        echo "QT_DIR=$QT_INSTALL_DIR/$QT_VERSION/android_$ANDROID_ABI" >> $GITHUB_ENV
        echo "PATH=$QT_DIR/bin:$PATH" >> $GITHUB_ENV

    # 验证步骤
    - name: Verify Qt
      run: |
        echo "=== qmake路径验证 ==="
        which qmake
        echo "=== qmake版本验证 ==="
        qmake -v

    # 构建步骤
    - name: Build with QMake
      run: |
        qmake Knot.pro -spec android-clang \
          ANDROID_ABIS=$ANDROID_ABI \
          "QMAKE_CXXFLAGS+=-fexceptions"
        
        make -j$(nproc) apk

    # 异常处理
    - name: Debug on failure
      if: ${{ failure() }}
      run: |
        echo "=== 环境诊断 ==="
        env | grep -E 'PATH|QT'
        ls -l $QT_DIR/bin/qmake
